[2019-01-11 17:22:11.995] [INFO] org.springframework.boot.StartupInfoLogger 50 logStarting - Starting SpringbootdemoApplication on DESKTOP-TJQF55G with PID 11872 (E:\MyProject\springbootdemo\target\classes started by ETCP-201811026 in E:\MyProject\springbootdemo)
[2019-01-11 17:22:12.004] [DEBUG] org.springframework.boot.StartupInfoLogger 53 logStarting - Running with Spring Boot v2.0.7.RELEASE, Spring v5.0.11.RELEASE
[2019-01-11 17:22:12.005] [INFO] org.springframework.boot.SpringApplication 654 logStartupProfileInfo - No active profile set, falling back to default profiles: default
[2019-01-11 17:22:12.073] [INFO] org.springframework.context.support.AbstractApplicationContext 588 prepareRefresh - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cb40e3b: startup date [Fri Jan 11 17:22:12 CST 2019]; root of context hierarchy
[2019-01-11 17:22:13.195] [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate 172 multipleStoresDetected - Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-01-11 17:22:13.243] [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate 172 multipleStoresDetected - Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-01-11 17:22:13.763] [DEBUG] org.apache.ibatis.logging.LogFactory 135 setImplementation - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2019-01-11 17:22:14.033] [INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 326 postProcessAfterInitialization - Bean 'shiroConfig' of type [com.pace2car.springbootdemo.config.ShiroConfig$$EnhancerBySpringCGLIB$$5401072c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-01-11 17:22:14.100] [INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 326 postProcessAfterInitialization - Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-01-11 17:22:14.163] [INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 326 postProcessAfterInitialization - Bean 'shiroRealm' of type [com.pace2car.springbootdemo.shiro.realm.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-01-11 17:22:14.164] [DEBUG] org.apache.shiro.realm.AuthorizingRealm 234 getAuthorizationCacheLazy - No authorizationCache instance set.  Checking for a cacheManager...
[2019-01-11 17:22:14.164] [DEBUG] org.apache.shiro.realm.AuthorizingRealm 242 getAuthorizationCacheLazy - CacheManager [org.apache.shiro.cache.ehcache.EhCacheManager@21a5b599] has been configured.  Building authorization cache named [com.pace2car.springbootdemo.shiro.realm.ShiroRealm.authorizationCache]
[2019-01-11 17:22:14.164] [DEBUG] org.apache.shiro.cache.ehcache.EhCacheManager 205 ensureCacheManager - cacheManager property not set.  Constructing CacheManager instance... 
[2019-01-11 17:22:14.169] [DEBUG] org.apache.shiro.io.ResourceUtils 159 loadFromClassPath - Opening resource from class path [org/apache/shiro/cache/ehcache/ehcache.xml]
[2019-01-11 17:22:14.177] [DEBUG] net.sf.ehcache.config.ConfigurationFactory 148 parseConfiguration - Configuring ehcache from InputStream
[2019-01-11 17:22:14.196] [DEBUG] net.sf.ehcache.config.DiskStoreConfiguration 141 translatePath - Disk Store Path: C:\Users\ETCP-2~1\AppData\Local\Temp\/shiro-ehcache
[2019-01-11 17:22:14.221] [DEBUG] net.sf.ehcache.util.PropertyUtil 88 parseProperties - propertiesString is null.
[2019-01-11 17:22:14.234] [DEBUG] net.sf.ehcache.config.ConfigurationHelper 185 createCacheManagerEventListener - No CacheManagerEventListenerFactory class specified. Skipping...
[2019-01-11 17:22:14.246] [DEBUG] net.sf.ehcache.Cache 968 createBootstrapCacheLoader - No BootstrapCacheLoaderFactory class specified. Skipping...
[2019-01-11 17:22:14.247] [DEBUG] net.sf.ehcache.Cache 942 createCacheWriter - CacheWriter factory not configured. Skipping...
[2019-01-11 17:22:14.248] [DEBUG] net.sf.ehcache.config.ConfigurationHelper 96 createCacheExceptionHandler - No CacheExceptionHandlerFactory class specified. Skipping...
[2019-01-11 17:22:14.255] [DEBUG] net.sf.ehcache.Cache 968 createBootstrapCacheLoader - No BootstrapCacheLoaderFactory class specified. Skipping...
[2019-01-11 17:22:14.256] [DEBUG] net.sf.ehcache.Cache 942 createCacheWriter - CacheWriter factory not configured. Skipping...
[2019-01-11 17:22:14.256] [DEBUG] net.sf.ehcache.config.ConfigurationHelper 96 createCacheExceptionHandler - No CacheExceptionHandlerFactory class specified. Skipping...
[2019-01-11 17:22:14.257] [DEBUG] net.sf.ehcache.Cache 968 createBootstrapCacheLoader - No BootstrapCacheLoaderFactory class specified. Skipping...
[2019-01-11 17:22:14.257] [DEBUG] net.sf.ehcache.Cache 942 createCacheWriter - CacheWriter factory not configured. Skipping...
[2019-01-11 17:22:14.257] [DEBUG] net.sf.ehcache.config.ConfigurationHelper 96 createCacheExceptionHandler - No CacheExceptionHandlerFactory class specified. Skipping...
[2019-01-11 17:22:14.289] [DEBUG] net.sf.ehcache.store.MemoryStore 153 <init> - Initialized net.sf.ehcache.store.MemoryStore for org.apache.shiro.realm.text.PropertiesRealm-0-accounts
[2019-01-11 17:22:14.298] [DEBUG] net.sf.ehcache.store.disk.DiskStorageFactory 870 deleteFile - Failed to delete file org.apache.shiro.realm.text.PropertiesRealm-0-accounts.index
[2019-01-11 17:22:14.309] [DEBUG] net.sf.ehcache.store.disk.DiskStorageFactory 165 <init> - Matching data file missing (or empty) for index file. Deleting index file C:\Users\ETCP-2~1\AppData\Local\Temp\shiro-ehcache\org.apache.shiro.realm.text.PropertiesRealm-0-accounts.index
[2019-01-11 17:22:14.310] [DEBUG] net.sf.ehcache.store.disk.DiskStorageFactory 870 deleteFile - Failed to delete file org.apache.shiro.realm.text.PropertiesRealm-0-accounts.index
[2019-01-11 17:22:14.322] [DEBUG] net.sf.ehcache.Cache 1165 initialise - Initialised cache: org.apache.shiro.realm.text.PropertiesRealm-0-accounts
[2019-01-11 17:22:14.323] [DEBUG] net.sf.ehcache.config.ConfigurationHelper 332 createCacheDecorators - CacheDecoratorFactory not configured. Skipping for 'org.apache.shiro.realm.text.PropertiesRealm-0-accounts'.
[2019-01-11 17:22:14.323] [DEBUG] net.sf.ehcache.config.ConfigurationHelper 361 createDefaultCacheDecorators - CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.apache.shiro.realm.text.PropertiesRealm-0-accounts'.
[2019-01-11 17:22:14.324] [DEBUG] net.sf.ehcache.store.MemoryStore 153 <init> - Initialized net.sf.ehcache.store.MemoryStore for shiro-activeSessionCache
[2019-01-11 17:22:14.325] [DEBUG] net.sf.ehcache.store.disk.DiskStorageFactory 165 <init> - Matching data file missing (or empty) for index file. Deleting index file C:\Users\ETCP-2~1\AppData\Local\Temp\shiro-ehcache\shiro-activeSessionCache.index
[2019-01-11 17:22:14.326] [DEBUG] net.sf.ehcache.store.disk.DiskStorageFactory 870 deleteFile - Failed to delete file shiro-activeSessionCache.index
[2019-01-11 17:22:14.326] [DEBUG] net.sf.ehcache.Cache 1165 initialise - Initialised cache: shiro-activeSessionCache
[2019-01-11 17:22:14.327] [DEBUG] net.sf.ehcache.config.ConfigurationHelper 332 createCacheDecorators - CacheDecoratorFactory not configured. Skipping for 'shiro-activeSessionCache'.
[2019-01-11 17:22:14.327] [DEBUG] net.sf.ehcache.config.ConfigurationHelper 361 createDefaultCacheDecorators - CacheDecoratorFactory not configured for defaultCache. Skipping for 'shiro-activeSessionCache'.
[2019-01-11 17:22:14.328] [DEBUG] org.apache.shiro.cache.ehcache.EhCacheManager 218 ensureCacheManager - implicit cacheManager created successfully.
[2019-01-11 17:22:14.328] [INFO] org.apache.shiro.cache.ehcache.EhCacheManager 158 getCache - Cache with name 'com.pace2car.springbootdemo.shiro.realm.ShiroRealm.authorizationCache' does not yet exist.  Creating now.
[2019-01-11 17:22:14.330] [DEBUG] net.sf.ehcache.store.MemoryStore 153 <init> - Initialized net.sf.ehcache.store.NotifyingMemoryStore for com.pace2car.springbootdemo.shiro.realm.ShiroRealm.authorizationCache
[2019-01-11 17:22:14.332] [DEBUG] net.sf.ehcache.Cache 1165 initialise - Initialised cache: com.pace2car.springbootdemo.shiro.realm.ShiroRealm.authorizationCache
[2019-01-11 17:22:14.332] [DEBUG] net.sf.ehcache.config.ConfigurationHelper 361 createDefaultCacheDecorators - CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.pace2car.springbootdemo.shiro.realm.ShiroRealm.authorizationCache'.
[2019-01-11 17:22:14.332] [INFO] org.apache.shiro.cache.ehcache.EhCacheManager 165 getCache - Added EhCache named [com.pace2car.springbootdemo.shiro.realm.ShiroRealm.authorizationCache]
[2019-01-11 17:22:14.350] [INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 326 postProcessAfterInitialization - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-01-11 17:22:14.352] [INFO] com.pace2car.springbootdemo.config.ShiroConfig 32 shirFilter - ShiroConfiguration.shiroFilter()
[2019-01-11 17:22:14.381] [INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 326 postProcessAfterInitialization - Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$ebb4f1ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-01-11 17:22:14.428] [INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 326 postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$254933c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-01-11 17:22:14.456] [INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 326 postProcessAfterInitialization - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-01-11 17:22:15.218] [INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer 91 initialize - Tomcat initialized with port(s): 8080 (http)
[2019-01-11 17:22:15.236] [INFO] org.apache.juli.logging.DirectJDKLog 180 log - Initializing ProtocolHandler ["http-nio-8080"]
[2019-01-11 17:22:15.251] [INFO] org.apache.juli.logging.DirectJDKLog 180 log - Starting service [Tomcat]
[2019-01-11 17:22:15.252] [INFO] org.apache.juli.logging.DirectJDKLog 180 log - Starting Servlet Engine: Apache Tomcat/8.5.35
[2019-01-11 17:22:15.254] [DEBUG] net.sf.ehcache.util.UpdateChecker 68 doCheck - Checking for update...
[2019-01-11 17:22:15.258] [INFO] org.apache.juli.logging.DirectJDKLog 180 log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;E:\devSoft\Apache\apache-maven-3.5.3\bin\;E:\Program Files\OpenVPN\bin;C:\Program Files\TortoiseSVN\bin;E:\devSoft\mysql-5.7.24-winx64\bin;C:\Program Files\nodejs\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;%ERLANG_HOME%\bin;C:\Users\ETCP-201811026\AppData\Roaming\npm;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;.]
[2019-01-11 17:22:15.394] [INFO] org.apache.juli.logging.DirectJDKLog 180 log - Initializing Spring embedded WebApplicationContext
[2019-01-11 17:22:15.394] [INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 296 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 3321 ms
[2019-01-11 17:22:15.469] [DEBUG] org.apache.shiro.spring.web.ShiroFilterFactoryBean 424 createInstance - Creating Shiro Filter instance.
[2019-01-11 17:22:15.487] [DEBUG] org.apache.shiro.web.filter.mgt.DefaultFilterChainManager 127 createChain - Creating chain [/static/**] from String definition [anon]
[2019-01-11 17:22:15.488] [DEBUG] org.apache.shiro.web.filter.mgt.DefaultFilterChainManager 278 applyChainConfig - Attempting to apply path [/static/**] to filter [anon] with config [null]
[2019-01-11 17:22:15.490] [DEBUG] org.apache.shiro.web.filter.mgt.DefaultFilterChainManager 127 createChain - Creating chain [/logout] from String definition [logout]
[2019-01-11 17:22:15.490] [DEBUG] org.apache.shiro.web.filter.mgt.DefaultFilterChainManager 278 applyChainConfig - Attempting to apply path [/logout] to filter [logout] with config [null]
[2019-01-11 17:22:15.491] [DEBUG] org.apache.shiro.web.filter.mgt.DefaultFilterChainManager 127 createChain - Creating chain [/**] from String definition [authc]
[2019-01-11 17:22:15.491] [DEBUG] org.apache.shiro.web.filter.mgt.DefaultFilterChainManager 278 applyChainConfig - Attempting to apply path [/**] to filter [authc] with config [null]
[2019-01-11 17:22:15.515] [DEBUG] org.apache.shiro.spring.web.ShiroFilterFactoryBean 501 postProcessBeforeInitialization - Found filter chain candidate filter 'requestContextFilter'
[2019-01-11 17:22:15.544] [DEBUG] org.apache.shiro.spring.web.ShiroFilterFactoryBean 501 postProcessBeforeInitialization - Found filter chain candidate filter 'hiddenHttpMethodFilter'
[2019-01-11 17:22:15.560] [DEBUG] org.apache.shiro.spring.web.ShiroFilterFactoryBean 501 postProcessBeforeInitialization - Found filter chain candidate filter 'httpPutFormContentFilter'
[2019-01-11 17:22:15.575] [DEBUG] org.apache.shiro.spring.web.ShiroFilterFactoryBean 501 postProcessBeforeInitialization - Found filter chain candidate filter 'characterEncodingFilter'
[2019-01-11 17:22:15.592] [INFO] org.springframework.boot.web.servlet.ServletRegistrationBean 187 addRegistration - Servlet dispatcherServlet mapped to [/]
[2019-01-11 17:22:15.595] [INFO] org.springframework.boot.web.servlet.ServletRegistrationBean 187 addRegistration - Servlet statViewServlet mapped to [/druid/*]
[2019-01-11 17:22:15.599] [INFO] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean 245 configure - Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-01-11 17:22:15.600] [INFO] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean 245 configure - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2019-01-11 17:22:15.600] [INFO] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean 245 configure - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2019-01-11 17:22:15.600] [INFO] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean 245 configure - Mapping filter: 'requestContextFilter' to: [/*]
[2019-01-11 17:22:15.600] [INFO] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean 258 configure - Mapping filter: 'webStatFilter' to urls: [/*]
[2019-01-11 17:22:15.601] [INFO] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean 245 configure - Mapping filter: 'shirFilter' to: [/*]
[2019-01-11 17:22:15.641] [DEBUG] net.sf.ehcache.util.UpdateChecker 63 checkForUpdate - Update check failed: java.io.IOException: Server returned HTTP response code: 403 for URL: http://www.terracotta.org/kit/reflector?kitID=ehcache.default&pageID=update.properties&id=174331964&os-name=Windows+10&jvm-name=Java+HotSpot%28TM%29+64-Bit+Server+VM&jvm-version=1.8.0_191&platform=amd64&tc-version=UNKNOWN&tc-product=Ehcache+Core+2.5.1&source=Ehcache+Core&uptime-secs=1&patch=unknown
[2019-01-11 17:22:15.880] [INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure 56 dataSource - Init DruidDataSource
[2019-01-11 17:22:16.334] [INFO] com.alibaba.druid.pool.DruidDataSource 930 init - {dataSource-1} inited
[2019-01-11 17:22:16.451] [DEBUG] org.apache.ibatis.io.VFS$VFSHolder 77 createVFS - Using VFS adapter com.baomidou.mybatisplus.spring.boot.starter.SpringBootVFS
[2019-01-11 17:22:16.453] [DEBUG] org.apache.ibatis.io.ResolverUtil 256 addIfMatching - Checking to see if class com.pace2car.springbootdemo.entity.Address matches criteria [is assignable to Object]
[2019-01-11 17:22:16.453] [DEBUG] org.apache.ibatis.io.ResolverUtil 256 addIfMatching - Checking to see if class com.pace2car.springbootdemo.entity.User matches criteria [is assignable to Object]
[2019-01-11 17:22:16.734] [WARN] com.baomidou.mybatisplus.toolkit.TableInfoHelper 192 initTableInfo - Warn: Could not find @TableId in Class: com.pace2car.springbootdemo.shiro.entity.URolePermission.
[2019-01-11 17:22:16.735] [WARN] com.baomidou.mybatisplus.mapper.AutoSqlInjector 145 injectSql - class com.pace2car.springbootdemo.shiro.entity.URolePermission ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
[2019-01-11 17:22:16.837] [WARN] com.baomidou.mybatisplus.toolkit.TableInfoHelper 192 initTableInfo - Warn: Could not find @TableId in Class: com.pace2car.springbootdemo.shiro.entity.UUserRole.
[2019-01-11 17:22:16.837] [WARN] com.baomidou.mybatisplus.mapper.AutoSqlInjector 145 injectSql - class com.pace2car.springbootdemo.shiro.entity.UUserRole ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
[2019-01-11 17:22:17.670] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/async/sub],methods=[GET]}" onto public java.lang.String com.pace2car.springbootdemo.web.controller.basecontroller.AsyncController.submit()
[2019-01-11 17:22:17.672] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/index]}" onto public java.lang.String com.pace2car.springbootdemo.web.controller.basecontroller.ShiroController.list()
[2019-01-11 17:22:17.673] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/success],methods=[GET]}" onto public java.util.List<com.pace2car.springbootdemo.shiro.entity.UUser> com.pace2car.springbootdemo.web.controller.basecontroller.ShiroController.getAll()
[2019-01-11 17:22:17.673] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/logOut]}" onto public java.lang.String com.pace2car.springbootdemo.web.controller.basecontroller.ShiroController.logOut()
[2019-01-11 17:22:17.676] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/login]}" onto public java.lang.String com.pace2car.springbootdemo.web.controller.basecontroller.ShiroController.login(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)
[2019-01-11 17:22:17.676] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/notLogin]}" onto public java.lang.String com.pace2car.springbootdemo.web.controller.basecontroller.ShiroController.notLogin(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)
[2019-01-11 17:22:17.677] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/403],methods=[GET]}" onto public java.lang.String com.pace2car.springbootdemo.web.controller.basecontroller.ShiroController.notRole()
[2019-01-11 17:22:17.677] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/reloadPermission],methods=[GET]}" onto public java.util.List<java.lang.String> com.pace2car.springbootdemo.web.controller.basecontroller.ShiroController.reloadPermission()
[2019-01-11 17:22:17.679] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.pace2car.springbootdemo.entity.User> com.pace2car.springbootdemo.web.controller.usercontroller.UserController.getAll()
[2019-01-11 17:22:17.680] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/user/complex],methods=[GET]}" onto public java.util.List<com.pace2car.springbootdemo.web.vo.User> com.pace2car.springbootdemo.web.controller.usercontroller.UserController.getComplexUser(com.pace2car.springbootdemo.dto.GetUserParam)
[2019-01-11 17:22:17.681] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/user/page],methods=[GET]}" onto public com.baomidou.mybatisplus.plugins.Page<com.pace2car.springbootdemo.entity.User> com.pace2car.springbootdemo.web.controller.usercontroller.UserController.getAllByPage(java.lang.Integer,java.lang.Integer,com.pace2car.springbootdemo.entity.User)
[2019-01-11 17:22:17.681] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/user/id],methods=[GET]}" onto public java.util.List<com.pace2car.springbootdemo.entity.User> com.pace2car.springbootdemo.web.controller.usercontroller.UserController.getAllById(java.lang.Integer)
[2019-01-11 17:22:17.689] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-01-11 17:22:17.690] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-01-11 17:22:17.690] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-01-11 17:22:17.696] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-01-11 17:22:17.698] [INFO] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry 550 register - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-01-11 17:22:18.330] [INFO] com.pace2car.springbootdemo.config.ExecutorConfig 26 asyncServiceExecutor - start asyncServiceExecutor
[2019-01-11 17:22:18.336] [INFO] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService
[2019-01-11 17:22:18.346] [INFO] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'asyncServiceExecutor'
[2019-01-11 17:22:18.393] [DEBUG] io.netty.util.internal.logging.InternalLoggerFactory 43 newDefaultFactory - Using SLF4J as the default logging framework
[2019-01-11 17:22:18.397] [DEBUG] io.lettuce.core.resource.DefaultClientResources 105 <clinit> - -Dio.netty.eventLoopThreads: 8
[2019-01-11 17:22:18.450] [DEBUG] io.netty.util.ResourceLeakDetector 121 <clinit> - -Dio.netty.leakDetection.level: simple
[2019-01-11 17:22:18.450] [DEBUG] io.netty.util.ResourceLeakDetector 122 <clinit> - -Dio.netty.leakDetection.targetRecords: 4
[2019-01-11 17:22:18.454] [DEBUG] io.netty.util.internal.PlatformDependent 959 isWindows0 - Platform: Windows
[2019-01-11 17:22:18.456] [DEBUG] io.netty.util.internal.PlatformDependent0 395 explicitNoUnsafeCause0 - -Dio.netty.noUnsafe: false
[2019-01-11 17:22:18.456] [DEBUG] io.netty.util.internal.PlatformDependent0 871 javaVersion0 - Java version: 8
[2019-01-11 17:22:18.458] [DEBUG] io.netty.util.internal.PlatformDependent0 120 <clinit> - sun.misc.Unsafe.theUnsafe: available
[2019-01-11 17:22:18.459] [DEBUG] io.netty.util.internal.PlatformDependent0 144 <clinit> - sun.misc.Unsafe.copyMemory: available
[2019-01-11 17:22:18.459] [DEBUG] io.netty.util.internal.PlatformDependent0 182 <clinit> - java.nio.Buffer.address: available
[2019-01-11 17:22:18.460] [DEBUG] io.netty.util.internal.PlatformDependent0 243 <clinit> - direct buffer constructor: available
[2019-01-11 17:22:18.461] [DEBUG] io.netty.util.internal.PlatformDependent0 313 <clinit> - java.nio.Bits.unaligned: available, true
[2019-01-11 17:22:18.461] [DEBUG] io.netty.util.internal.PlatformDependent0 378 <clinit> - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2019-01-11 17:22:18.461] [DEBUG] io.netty.util.internal.PlatformDependent0 385 <clinit> - java.nio.DirectByteBuffer.<init>(long, int): available
[2019-01-11 17:22:18.462] [DEBUG] io.netty.util.internal.PlatformDependent 996 unsafeUnavailabilityCause0 - sun.misc.Unsafe: available
[2019-01-11 17:22:18.462] [DEBUG] io.netty.util.internal.PlatformDependent 1090 tmpdir0 - -Dio.netty.tmpdir: C:\Users\ETCP-2~1\AppData\Local\Temp (java.io.tmpdir)
[2019-01-11 17:22:18.462] [DEBUG] io.netty.util.internal.PlatformDependent 1169 bitMode0 - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2019-01-11 17:22:18.464] [DEBUG] io.netty.util.internal.PlatformDependent 158 <clinit> - -Dio.netty.maxDirectMemory: 1821376512 bytes
[2019-01-11 17:22:18.465] [DEBUG] io.netty.util.internal.PlatformDependent 164 <clinit> - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2019-01-11 17:22:18.467] [DEBUG] io.netty.util.internal.CleanerJava6 92 <clinit> - java.nio.ByteBuffer.cleaner(): available
[2019-01-11 17:22:18.467] [DEBUG] io.netty.util.internal.PlatformDependent 184 <clinit> - -Dio.netty.noPreferDirect: false
[2019-01-11 17:22:18.467] [DEBUG] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory 202 newResourceLeakDetector - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1ae23815
[2019-01-11 17:22:18.470] [DEBUG] io.netty.util.internal.PlatformDependent$Mpsc 864 <clinit> - org.jctools-core.MpscChunkedArrayQueue: available
[2019-01-11 17:22:18.485] [DEBUG] reactor.util.Loggers$Slf4JLogger 213 debug - Using Slf4j logging framework
[2019-01-11 17:22:18.504] [DEBUG] reactor.util.Loggers$Slf4JLogger 213 debug - Starting UnsafeSupport init in Java 1.8
[2019-01-11 17:22:18.504] [DEBUG] reactor.util.Loggers$Slf4JLogger 213 debug - Unsafe is available
[2019-01-11 17:22:18.516] [DEBUG] io.lettuce.core.resource.DefaultClientResources 184 <init> - LatencyUtils/HdrUtils are not available, metrics are disabled
[2019-01-11 17:22:18.574] [DEBUG] io.netty.buffer.PooledByteBufAllocator 120 <clinit> - -Dio.netty.allocator.numHeapArenas: 16
[2019-01-11 17:22:18.574] [DEBUG] io.netty.buffer.PooledByteBufAllocator 121 <clinit> - -Dio.netty.allocator.numDirectArenas: 16
[2019-01-11 17:22:18.575] [DEBUG] io.netty.buffer.PooledByteBufAllocator 123 <clinit> - -Dio.netty.allocator.pageSize: 8192
[2019-01-11 17:22:18.575] [DEBUG] io.netty.buffer.PooledByteBufAllocator 128 <clinit> - -Dio.netty.allocator.maxOrder: 11
[2019-01-11 17:22:18.575] [DEBUG] io.netty.buffer.PooledByteBufAllocator 132 <clinit> - -Dio.netty.allocator.chunkSize: 16777216
[2019-01-11 17:22:18.575] [DEBUG] io.netty.buffer.PooledByteBufAllocator 133 <clinit> - -Dio.netty.allocator.tinyCacheSize: 512
[2019-01-11 17:22:18.575] [DEBUG] io.netty.buffer.PooledByteBufAllocator 134 <clinit> - -Dio.netty.allocator.smallCacheSize: 256
[2019-01-11 17:22:18.575] [DEBUG] io.netty.buffer.PooledByteBufAllocator 135 <clinit> - -Dio.netty.allocator.normalCacheSize: 64
[2019-01-11 17:22:18.575] [DEBUG] io.netty.buffer.PooledByteBufAllocator 136 <clinit> - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2019-01-11 17:22:18.576] [DEBUG] io.netty.buffer.PooledByteBufAllocator 137 <clinit> - -Dio.netty.allocator.cacheTrimInterval: 8192
[2019-01-11 17:22:18.576] [DEBUG] io.netty.buffer.PooledByteBufAllocator 138 <clinit> - -Dio.netty.allocator.useCacheForAllThreads: true
[2019-01-11 17:22:18.580] [DEBUG] io.netty.util.internal.InternalThreadLocalMap 54 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2019-01-11 17:22:18.581] [DEBUG] io.netty.util.internal.InternalThreadLocalMap 57 <clinit> - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2019-01-11 17:22:18.734] [INFO] springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping 69 initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-01-11 17:22:18.933] [INFO] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping 373 registerHandler - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-01-11 17:22:19.258] [INFO] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter 588 initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cb40e3b: startup date [Fri Jan 11 17:22:12 CST 2019]; root of context hierarchy
[2019-01-11 17:22:19.357] [INFO] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping 373 registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-01-11 17:22:19.358] [INFO] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping 373 registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-01-11 17:22:19.390] [INFO] org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 288 initExceptionHandlerAdviceCache - Detected @ExceptionHandler methods in globalExceptionHandler
[2019-01-11 17:22:19.591] [INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping 61 <init> - Adding welcome page template: index
[2019-01-11 17:22:20.321] [INFO] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer 131 postProcessTemplateLoaders - ClassTemplateLoader for Spring macros added to FreeMarker configuration
[2019-01-11 17:22:20.450] [DEBUG] reactor.util.Loggers$Slf4JLogger 213 debug - Enabling stacktrace debugging via onOperatorDebug
[2019-01-11 17:22:20.452] [DEBUG] reactor.util.Loggers$Slf4JLogger 218 debug - Hooking onEachOperator: onOperatorDebug
[2019-01-11 17:22:20.633] [INFO] org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer 57 startServer - LiveReload server is running on port 35729
[2019-01-11 17:22:20.703] [INFO] org.springframework.jmx.export.MBeanExporter 433 afterSingletonsInstantiated - Registering beans for JMX exposure on startup
[2019-01-11 17:22:20.705] [INFO] org.springframework.jmx.export.MBeanExporter 895 autodetect - Bean with name 'statFilter' has been autodetected for JMX exposure
[2019-01-11 17:22:20.706] [INFO] org.springframework.jmx.export.MBeanExporter 895 autodetect - Bean with name 'dataSource' has been autodetected for JMX exposure
[2019-01-11 17:22:20.717] [INFO] org.springframework.jmx.export.MBeanExporter 895 autodetect - Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
[2019-01-11 17:22:20.722] [INFO] org.springframework.jmx.export.MBeanExporter 668 registerBeanInstance - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
[2019-01-11 17:22:20.723] [INFO] org.springframework.jmx.export.MBeanExporter 675 registerBeanInstance - Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
[2019-01-11 17:22:20.745] [INFO] org.springframework.jmx.export.MBeanExporter 668 registerBeanInstance - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
[2019-01-11 17:22:20.753] [INFO] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup 356 start - Starting beans in phase 2147483647
[2019-01-11 17:22:20.754] [INFO] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper 147 start - Context refreshed
[2019-01-11 17:22:20.774] [INFO] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper 150 start - Found 1 custom documentation plugin(s)
[2019-01-11 17:22:20.859] [INFO] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner 41 scan - Scanning for api listing references
[2019-01-11 17:22:21.106] [INFO] springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator 40 startingWith - Generating unique operation named: getAllUsingGET_1
[2019-01-11 17:22:21.176] [INFO] org.apache.juli.logging.DirectJDKLog 180 log - Starting ProtocolHandler ["http-nio-8080"]
[2019-01-11 17:22:21.190] [INFO] org.apache.juli.logging.DirectJDKLog 180 log - Using a shared selector for servlet write/read
[2019-01-11 17:22:21.213] [INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer 206 start - Tomcat started on port(s): 8080 (http) with context path ''
[2019-01-11 17:22:21.220] [INFO] org.springframework.boot.StartupInfoLogger 59 logStarted - Started SpringbootdemoApplication in 9.715 seconds (JVM running for 14.528)
[2019-01-11 17:22:25.018] [INFO] org.apache.juli.logging.DirectJDKLog 180 log - Initializing Spring FrameworkServlet 'dispatcherServlet'
[2019-01-11 17:22:25.019] [INFO] org.springframework.web.servlet.FrameworkServlet 497 initServletBean - FrameworkServlet 'dispatcherServlet': initialization started
[2019-01-11 17:22:25.068] [INFO] org.springframework.web.servlet.FrameworkServlet 512 initServletBean - FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
[2019-01-11 17:22:25.282] [INFO] com.pace2car.springbootdemo.web.controller.basecontroller.ShiroController 59 login - 请先登录
[2019-01-11 17:22:25.374] [DEBUG] org.thymeleaf.TemplateEngine 325 initialize - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2019-01-11 17:22:25.810] [DEBUG] org.thymeleaf.ConfigurationPrinterHelper 158 printConfiguration - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: [no caches]
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6353c9bd
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@28433c40
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6c1a1f7c
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2019-01-11 17:22:25.813] [DEBUG] org.thymeleaf.TemplateEngine 348 initialize - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2019-01-11 17:22:29.216] [INFO] com.pace2car.springbootdemo.shiro.realm.ShiroRealm 79 doGetAuthenticationInfo - 用户登录，登录信息-->org.apache.shiro.authc.UsernamePasswordToken - admin, rememberMe=false (0:0:0:0:0:0:0:1)
[2019-01-11 17:22:29.320] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT id AS id,username,email,`password`,create_time AS createTime,last_login_time AS lastLoginTime,`status` FROM u_user WHERE (username = ?) 
[2019-01-11 17:22:29.478] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: admin(String)
[2019-01-11 17:22:29.519] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:22:29.520] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20000} enter cache
[2019-01-11 17:22:29.524] [INFO] com.pace2car.springbootdemo.shiro.realm.ShiroRealm 85 doGetAuthenticationInfo - 用户登录，登录信息-->UUser(id=1, username=admin, email=admin@aa.com, password=admin, createTime=Thu Jan 10 16:23:34 CST 2019, lastLoginTime=Fri Jan 11 17:18:20 CST 2019, status=1)
[2019-01-11 17:22:29.541] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: UPDATE u_user SET username=?, email=?, `password`=?, create_time=?, last_login_time=?, `status`=? WHERE id=? 
[2019-01-11 17:22:29.550] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: admin(String), admin@aa.com(String), admin(String), 2019-01-10 16:23:34.0(Timestamp), 2019-01-11 17:22:29.524(Timestamp), 1(Long), 1(Long)
[2019-01-11 17:22:29.555] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==    Updates: 1
[2019-01-11 17:22:29.555] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20001} enter cache
[2019-01-11 17:22:29.561] [INFO] com.pace2car.springbootdemo.shiro.realm.ShiroRealm 98 doGetAuthenticationInfo - 用户登录成功！UUser(id=1, username=admin, email=admin@aa.com, password=admin, createTime=Thu Jan 10 16:23:34 CST 2019, lastLoginTime=2019-01-11 17:22:29.524, status=1)
[2019-01-11 17:22:29.562] [DEBUG] org.apache.shiro.realm.AuthenticatingRealm 572 getAuthenticationInfo - Looked up AuthenticationInfo [UUser(id=1, username=admin, email=admin@aa.com, password=admin, createTime=Thu Jan 10 16:23:34 CST 2019, lastLoginTime=2019-01-11 17:22:29.524, status=1)] from doGetAuthenticationInfo
[2019-01-11 17:22:29.562] [DEBUG] org.apache.shiro.realm.AuthenticatingRealm 510 cacheAuthenticationInfoIfPossible - AuthenticationInfo caching is disabled for info [UUser(id=1, username=admin, email=admin@aa.com, password=admin, createTime=Thu Jan 10 16:23:34 CST 2019, lastLoginTime=2019-01-11 17:22:29.524, status=1)].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - admin, rememberMe=false (0:0:0:0:0:0:0:1)].
[2019-01-11 17:22:29.562] [DEBUG] org.apache.shiro.authc.credential.SimpleCredentialsMatcher 96 equals - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2019-01-11 17:22:29.563] [DEBUG] org.apache.shiro.authc.credential.SimpleCredentialsMatcher 102 equals - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2019-01-11 17:22:29.563] [DEBUG] org.apache.shiro.authc.AbstractAuthenticator 233 authenticate - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - admin, rememberMe=false (0:0:0:0:0:0:0:1)].  Returned account [UUser(id=1, username=admin, email=admin@aa.com, password=admin, createTime=Thu Jan 10 16:23:34 CST 2019, lastLoginTime=2019-01-11 17:22:29.524, status=1)]
[2019-01-11 17:22:29.564] [DEBUG] org.apache.shiro.subject.support.DefaultSubjectContext 101 resolveSecurityManager - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2019-01-11 17:22:29.564] [DEBUG] org.apache.shiro.mgt.DefaultSecurityManager 440 resolveSession - Context already contains a session.  Returning.
[2019-01-11 17:22:29.564] [DEBUG] org.apache.shiro.subject.support.DefaultSubjectContext 101 resolveSecurityManager - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2019-01-11 17:22:29.565] [DEBUG] org.apache.shiro.web.servlet.SimpleCookie 226 addCookieHeader - Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 10-Jan-2019 09:22:29 GMT]
[2019-01-11 17:22:29.565] [DEBUG] org.apache.shiro.mgt.AbstractRememberMeManager 290 onSuccessfulLogin - AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2019-01-11 17:22:36.318] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select r.type from u_role r, u_user u, u_user_role ur where r.id = ur.rid and u.id = ur.uid and u.username = ? 
[2019-01-11 17:22:36.325] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: admin(String)
[2019-01-11 17:22:36.333] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:22:36.335] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20002} enter cache
[2019-01-11 17:22:36.363] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select r.type from u_role r, u_user u, u_user_role ur where r.id = ur.rid and u.id = ur.uid and u.username = ? 
[2019-01-11 17:22:36.364] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: admin(String)
[2019-01-11 17:22:36.365] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:22:36.367] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select p.resource from u_permission p,u_role r,u_role_permission rp where r.id = rp.rid and p.id = rp.pid and r.type = ? 
[2019-01-11 17:22:36.369] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: admin(String)
[2019-01-11 17:22:36.371] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:22:36.372] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20003} enter cache
[2019-01-11 17:22:36.373] [INFO] com.pace2car.springbootdemo.shiro.realm.ShiroRealm 65 doGetAuthorizationInfo - 用户角色[admin]
[2019-01-11 17:22:36.373] [INFO] com.pace2car.springbootdemo.shiro.realm.ShiroRealm 67 doGetAuthorizationInfo - 用户权限[*:*]
[2019-01-11 17:22:36.384] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:22:36.392] [DEBUG] io.lettuce.core.RedisClient 271 connectStandaloneAsync - Trying to get a Redis connection for: RedisURI [host='127.0.0.1', port=6379]
[2019-01-11 17:22:36.522] [INFO] io.lettuce.core.EpollProvider 68 <clinit> - Starting without optional epoll library
[2019-01-11 17:22:36.525] [INFO] io.lettuce.core.KqueueProvider 70 <clinit> - Starting without optional kqueue library
[2019-01-11 17:22:36.530] [DEBUG] io.netty.channel.MultithreadEventLoopGroup 44 <clinit> - -Dio.netty.eventLoopThreads: 16
[2019-01-11 17:22:36.536] [DEBUG] io.netty.channel.nio.NioEventLoop 104 <clinit> - -Dio.netty.noKeySetOptimization: false
[2019-01-11 17:22:36.537] [DEBUG] io.netty.channel.nio.NioEventLoop 105 <clinit> - -Dio.netty.selectorAutoRebuildThreshold: 512
[2019-01-11 17:22:36.552] [DEBUG] io.lettuce.core.resource.DefaultEventLoopGroupProvider 75 addReference - Adding reference to io.netty.channel.nio.NioEventLoopGroup@3bd91b50, existing ref count 0
[2019-01-11 17:22:36.560] [DEBUG] io.lettuce.core.RedisClient 714 lambda$getSocketAddressSupplier$9 - Resolved SocketAddress 127.0.0.1:6379 using RedisURI [host='127.0.0.1', port=6379]
[2019-01-11 17:22:36.560] [DEBUG] io.lettuce.core.AbstractRedisClient 257 initializeChannelAsync - Connecting to Redis at 127.0.0.1:6379
[2019-01-11 17:22:36.583] [DEBUG] io.netty.channel.DefaultChannelId 79 <clinit> - -Dio.netty.processId: 11872 (auto-detected)
[2019-01-11 17:22:36.588] [DEBUG] io.netty.util.NetUtil 139 <clinit> - -Djava.net.preferIPv4Stack: false
[2019-01-11 17:22:36.588] [DEBUG] io.netty.util.NetUtil 140 <clinit> - -Djava.net.preferIPv6Addresses: false
[2019-01-11 17:22:36.693] [DEBUG] io.netty.util.NetUtil 224 <clinit> - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
[2019-01-11 17:22:36.695] [DEBUG] io.netty.util.NetUtil$1 289 run - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[2019-01-11 17:22:36.846] [DEBUG] io.netty.channel.DefaultChannelId 101 <clinit> - -Dio.netty.machineId: 00:00:00:00:00:00:00:e0 (auto-detected)
[2019-01-11 17:22:36.873] [DEBUG] io.netty.buffer.ByteBufUtil 83 <clinit> - -Dio.netty.allocator.type: pooled
[2019-01-11 17:22:36.874] [DEBUG] io.netty.buffer.ByteBufUtil 92 <clinit> - -Dio.netty.threadLocalDirectBufferSize: 0
[2019-01-11 17:22:36.874] [DEBUG] io.netty.buffer.ByteBufUtil 95 <clinit> - -Dio.netty.maxThreadLocalCharBufferSize: 16384
[2019-01-11 17:22:36.901] [DEBUG] io.netty.util.Recycler 96 <clinit> - -Dio.netty.recycler.maxCapacityPerThread: 4096
[2019-01-11 17:22:36.901] [DEBUG] io.netty.util.Recycler 97 <clinit> - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[2019-01-11 17:22:36.901] [DEBUG] io.netty.util.Recycler 98 <clinit> - -Dio.netty.recycler.linkCapacity: 16
[2019-01-11 17:22:36.901] [DEBUG] io.netty.util.Recycler 99 <clinit> - -Dio.netty.recycler.ratio: 8
[2019-01-11 17:22:36.911] [DEBUG] io.netty.buffer.AbstractByteBuf 61 <clinit> - -Dio.netty.buffer.checkAccessible: true
[2019-01-11 17:22:36.912] [DEBUG] io.netty.buffer.AbstractByteBuf 62 <clinit> - -Dio.netty.buffer.checkBounds: true
[2019-01-11 17:22:36.912] [DEBUG] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory 202 newResourceLeakDetector - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1f3aeaf6
[2019-01-11 17:22:36.937] [DEBUG] io.lettuce.core.protocol.CommandHandler 145 channelRegistered - [channel=0x04102c2d, [id: 0xbf20d5d2] (inactive), chid=0x1] channelRegistered()
[2019-01-11 17:22:36.945] [DEBUG] io.lettuce.core.protocol.CommandHandler 253 channelActive - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] channelActive()
[2019-01-11 17:22:36.945] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 368 lambda$notifyChannelActive$0 - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
[2019-01-11 17:22:36.946] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 373 lambda$notifyChannelActive$0 - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] activating endpoint
[2019-01-11 17:22:36.946] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 449 flushCommands - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] flushCommands()
[2019-01-11 17:22:36.946] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 464 flushCommands - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] flushCommands() Flushing 0 commands
[2019-01-11 17:22:36.947] [DEBUG] io.lettuce.core.protocol.ConnectionWatchdog 159 channelActive - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] channelActive()
[2019-01-11 17:22:36.947] [DEBUG] io.lettuce.core.protocol.ConnectionWatchdog 159 channelActive - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] channelActive()
[2019-01-11 17:22:36.948] [DEBUG] io.lettuce.core.protocol.CommandHandler 267 channelActive - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] channelActive() done
[2019-01-11 17:22:36.949] [DEBUG] io.lettuce.core.AbstractRedisClient 282 lambda$null$0 - Connecting to Redis at 127.0.0.1:6379: Success
[2019-01-11 17:22:36.952] [DEBUG] io.lettuce.core.protocol.ConnectionWatchdog 127 userEventTriggered - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@78cbc8df)
[2019-01-11 17:22:36.952] [DEBUG] io.lettuce.core.protocol.ConnectionWatchdog 127 userEventTriggered - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@78cbc8df)
[2019-01-11 17:22:36.954] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:36.955] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:36.957] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:36.959] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:36.961] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:36.971] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:36.971] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:36.972] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:36.975] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:36.978] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:36.978] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:36.978] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:36.979] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:36.980] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:36.981] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:36.982] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:36.982] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:36.982] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:36.998] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:36.999] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:36.999] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:37.000] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:37.001] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:37.001] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:37.001] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:37.001] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:37.002] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:37.055] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT count(0) FROM user u LEFT JOIN address a ON u.username = a.username WHERE 1 = 1 
[2019-01-11 17:22:37.061] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 
[2019-01-11 17:22:37.068] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:22:37.069] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20004} enter cache
[2019-01-11 17:22:37.074] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select u.id as id, u.username as username, password as password, age as age, email as email, address as address from user u left join address a on u.username = a.username where 1=1 LIMIT ? 
[2019-01-11 17:22:37.079] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 10(Integer)
[2019-01-11 17:22:37.086] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 3
[2019-01-11 17:22:37.087] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20005} enter cache
[2019-01-11 17:22:37.108] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:37.109] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:37.110] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:37.110] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:37.116] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:37.119] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:37.119] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:37.119] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:37.120] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:37.128] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:37.129] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:37.130] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:37.130] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:37.133] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:37.134] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:37.134] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:37.135] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:37.135] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:37.136] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 750ms
[2019-01-11 17:22:39.145] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:22:39.146] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:39.147] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:39.148] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:39.148] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:39.149] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:39.150] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
[2019-01-11 17:22:39.150] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:39.150] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:39.151] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
[2019-01-11 17:22:39.152] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 260 bytes, 1 commands in the stack
[2019-01-11 17:22:39.152] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:39.152] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:39.152] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@50d59974, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:39.157] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 11ms
[2019-01-11 17:22:40.249] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:22:40.249] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:40.250] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:40.251] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:40.251] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:40.252] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:40.253] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 756 bytes, 1 commands in the stack
[2019-01-11 17:22:40.253] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:40.253] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:40.253] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@11388882, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:40.254] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 5ms
[2019-01-11 17:22:44.313] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:22:44.314] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.314] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.315] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:44.315] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:44.315] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.316] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:44.316] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:44.316] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.316] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:44.317] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.317] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.318] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:44.318] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:44.318] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.319] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:44.319] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:44.319] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.319] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:44.322] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT count(0) FROM user u LEFT JOIN address a ON u.username = a.username WHERE 1 = 1 
[2019-01-11 17:22:44.323] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 
[2019-01-11 17:22:44.324] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:22:44.325] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select u.id as id, u.username as username, password as password, age as age, email as email, address as address from user u left join address a on u.username = a.username where 1=1 LIMIT ? 
[2019-01-11 17:22:44.326] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 2(Integer)
[2019-01-11 17:22:44.327] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 2
[2019-01-11 17:22:44.328] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.329] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.329] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:44.329] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:44.330] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.330] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:44.331] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:44.331] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.331] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:44.332] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.332] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.333] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:44.333] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:44.334] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.335] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:44.335] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:44.335] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:44.335] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:44.335] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 21ms
[2019-01-11 17:22:45.673] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:22:45.674] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:45.675] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:45.676] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:45.676] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:45.677] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:45.678] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
[2019-01-11 17:22:45.678] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:45.678] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:45.679] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
[2019-01-11 17:22:45.679] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 191 bytes, 1 commands in the stack
[2019-01-11 17:22:45.679] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:45.679] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:45.679] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@2c5c981c, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:45.680] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 6ms
[2019-01-11 17:22:48.454] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:22:48.455] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.455] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.456] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:48.456] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:48.457] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.458] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:48.458] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:48.458] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.458] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:48.459] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.460] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.460] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:48.460] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:48.461] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.462] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:48.462] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:48.462] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.462] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:48.466] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT count(0) FROM user u LEFT JOIN address a ON u.username = a.username WHERE 1 = 1 AND address = ? 
[2019-01-11 17:22:48.468] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 成都(String)
[2019-01-11 17:22:48.469] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:22:48.470] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20006} enter cache
[2019-01-11 17:22:48.473] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select u.id as id, u.username as username, password as password, age as age, email as email, address as address from user u left join address a on u.username = a.username where 1=1 and address = ? LIMIT ? 
[2019-01-11 17:22:48.474] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 成都(String), 2(Integer)
[2019-01-11 17:22:48.475] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:22:48.475] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20007} enter cache
[2019-01-11 17:22:48.476] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.477] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.477] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:48.477] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:48.479] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.479] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:48.479] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:48.479] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.479] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:48.480] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.480] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.480] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:48.480] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:48.481] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.481] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:22:48.482] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:48.482] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:48.482] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:48.482] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 27ms
[2019-01-11 17:22:49.537] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:22:49.538] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:49.539] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:49.540] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:22:49.540] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:22:49.541] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:49.541] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 650 bytes, 1 commands in the stack
[2019-01-11 17:22:49.542] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:22:49.542] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:22:49.542] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@526eb90f, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:22:49.543] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 5ms
[2019-01-11 17:23:41.087] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:23:41.088] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.088] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.088] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:41.088] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:41.089] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.089] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:41.090] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:41.090] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.090] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:41.091] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.091] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.091] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:41.091] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:41.092] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.092] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:41.092] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:41.093] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.093] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:41.098] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT count(0) FROM user u LEFT JOIN address a ON u.username = a.username WHERE 1 = 1 AND address = ? 
[2019-01-11 17:23:41.098] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 成都(String)
[2019-01-11 17:23:41.099] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:23:41.101] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select u.id as id, u.username as username, password as password, age as age, email as email, address as address from user u left join address a on u.username = a.username where 1=1 and address = ? LIMIT ? 
[2019-01-11 17:23:41.101] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 成都(String), 2(Integer)
[2019-01-11 17:23:41.102] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:23:41.104] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.104] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.105] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:41.105] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:41.106] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.106] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:41.106] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:41.107] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.107] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:41.108] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.108] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.109] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:41.109] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:41.109] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.110] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:41.110] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:41.110] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:41.110] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:41.110] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 23ms
[2019-01-11 17:23:45.038] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:23:45.039] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.039] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.040] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:45.040] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:45.041] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.041] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:45.041] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:45.041] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.042] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:45.042] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.043] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.044] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:45.044] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:45.044] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.045] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:45.045] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:45.045] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.045] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:45.048] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT count(0) FROM user u LEFT JOIN address a ON u.username = a.username WHERE 1 = 1 
[2019-01-11 17:23:45.049] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 
[2019-01-11 17:23:45.050] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:23:45.051] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select u.id as id, u.username as username, password as password, age as age, email as email, address as address from user u left join address a on u.username = a.username where 1=1 LIMIT ? 
[2019-01-11 17:23:45.051] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 2(Integer)
[2019-01-11 17:23:45.053] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 2
[2019-01-11 17:23:45.054] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.054] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.055] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:45.055] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:45.055] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.056] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:45.056] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:45.056] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.056] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:45.057] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.058] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.058] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:45.058] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:45.059] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.059] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:45.059] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:45.059] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:45.059] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:45.060] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 21ms
[2019-01-11 17:23:48.152] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:23:48.153] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.153] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.154] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:48.154] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:48.155] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.155] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:48.155] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:48.156] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.156] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:48.157] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.157] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.158] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:48.158] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:48.159] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.159] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:48.159] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:48.159] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.160] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:48.163] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT count(0) FROM user u LEFT JOIN address a ON u.username = a.username WHERE 1 = 1 
[2019-01-11 17:23:48.164] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 
[2019-01-11 17:23:48.165] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:23:48.166] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select u.id as id, u.username as username, password as password, age as age, email as email, address as address from user u left join address a on u.username = a.username where 1=1 LIMIT ? 
[2019-01-11 17:23:48.167] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 10(Integer)
[2019-01-11 17:23:48.168] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 3
[2019-01-11 17:23:48.170] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.170] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.170] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:48.170] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:48.171] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.172] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:48.172] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:48.172] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.172] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:48.173] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.173] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.174] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:48.174] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:48.174] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.175] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:23:48.175] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:48.175] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:48.175] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:48.175] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 22ms
[2019-01-11 17:23:49.064] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:23:49.064] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:49.065] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:49.066] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:49.066] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:49.067] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:49.068] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 448 bytes, 1 commands in the stack
[2019-01-11 17:23:49.068] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:49.068] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:49.068] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
[2019-01-11 17:23:49.069] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 308 bytes, 1 commands in the stack
[2019-01-11 17:23:49.069] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:49.069] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:49.069] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@302b2b4d, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:49.070] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 6ms
[2019-01-11 17:23:49.880] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:23:49.881] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:49.882] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:49.883] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:49.883] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:49.884] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:49.885] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 756 bytes, 1 commands in the stack
[2019-01-11 17:23:49.885] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:49.885] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:49.886] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@4ba002bb, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:49.887] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 6ms
[2019-01-11 17:23:57.716] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:23:57.717] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:57.717] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:57.718] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:23:57.718] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:23:57.719] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:57.720] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 703 bytes, 1 commands in the stack
[2019-01-11 17:23:57.720] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:23:57.720] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:23:57.720] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@42a43f96, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:23:57.721] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 5ms
[2019-01-11 17:24:00.952] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:24:00.953] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:00.954] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:00.954] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:00.955] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:00.955] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:00.956] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 650 bytes, 1 commands in the stack
[2019-01-11 17:24:00.957] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:00.957] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:00.957] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@10a91715, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:00.958] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 5ms
[2019-01-11 17:24:05.146] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:24:05.147] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.147] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.148] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:05.148] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:05.149] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.149] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:24:05.149] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:05.150] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.150] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:05.151] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.151] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.152] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:05.152] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:05.153] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.153] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:24:05.153] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:05.153] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.153] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:05.157] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT count(0) FROM user u LEFT JOIN address a ON u.username = a.username WHERE 1 = 1 AND u.id = ? AND address = ? 
[2019-01-11 17:24:05.161] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 1(Integer), 成都(String)
[2019-01-11 17:24:05.167] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:24:05.168] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20008} enter cache
[2019-01-11 17:24:05.169] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select u.id as id, u.username as username, password as password, age as age, email as email, address as address from user u left join address a on u.username = a.username where 1=1 and u.id = ? and address = ? LIMIT ? 
[2019-01-11 17:24:05.170] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 1(Integer), 成都(String), 2(Integer)
[2019-01-11 17:24:05.172] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:24:05.172] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20009} enter cache
[2019-01-11 17:24:05.173] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.173] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.174] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:05.174] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:05.175] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.175] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:24:05.175] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:05.175] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.175] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:05.177] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.177] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.178] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:05.178] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:05.178] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.179] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:24:05.179] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:05.180] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:05.180] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:05.180] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 34ms
[2019-01-11 17:24:06.832] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:24:06.832] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:06.833] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:06.833] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:06.834] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:06.834] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:06.835] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 650 bytes, 1 commands in the stack
[2019-01-11 17:24:06.835] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:06.835] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:06.836] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@51749619, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:06.836] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 4ms
[2019-01-11 17:24:18.702] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:24:18.702] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.703] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.703] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:18.703] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:18.703] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.704] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:24:18.704] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:18.704] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.704] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:18.705] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.705] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.706] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:18.706] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:18.706] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.707] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:24:18.707] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:18.707] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.707] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:18.710] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT count(0) FROM user u LEFT JOIN address a ON u.username = a.username WHERE 1 = 1 AND u.id = ? AND u.age = ? AND address = ? 
[2019-01-11 17:24:18.712] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 1(Integer), 12(Integer), 成都(String)
[2019-01-11 17:24:18.713] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:24:18.714] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20010} enter cache
[2019-01-11 17:24:18.715] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select u.id as id, u.username as username, password as password, age as age, email as email, address as address from user u left join address a on u.username = a.username where 1=1 and u.id = ? and u.age = ? and address = ? LIMIT ? 
[2019-01-11 17:24:18.717] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 1(Integer), 12(Integer), 成都(String), 2(Integer)
[2019-01-11 17:24:18.719] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:24:18.719] [DEBUG] com.alibaba.druid.pool.PreparedStatementPool 129 put - {conn-10005, pstmt-20011} enter cache
[2019-01-11 17:24:18.720] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.721] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.721] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:18.721] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:18.722] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.722] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:24:18.722] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:18.722] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.722] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:18.725] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.725] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.726] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:18.726] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:18.726] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.727] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2019-01-11 17:24:18.727] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:18.727] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:18.727] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:18.727] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 25ms
[2019-01-11 17:24:22.530] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:24:22.530] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:22.531] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:22.532] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:24:22.532] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:24:22.532] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:22.533] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
[2019-01-11 17:24:22.533] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:22.533] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:22.534] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
[2019-01-11 17:24:22.534] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 154 bytes, 1 commands in the stack
[2019-01-11 17:24:22.534] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:24:22.534] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:24:22.534] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@9bd229d, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:24:22.535] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 5ms
[2019-01-11 17:25:13.424] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select r.type from u_role r, u_user u, u_user_role ur where r.id = ur.rid and u.id = ur.uid and u.username = ? 
[2019-01-11 17:25:13.424] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: admin(String)
[2019-01-11 17:25:13.426] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:25:13.427] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select r.type from u_role r, u_user u, u_user_role ur where r.id = ur.rid and u.id = ur.uid and u.username = ? 
[2019-01-11 17:25:13.427] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: admin(String)
[2019-01-11 17:25:13.429] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:25:13.430] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: select p.resource from u_permission p,u_role r,u_role_permission rp where r.id = rp.rid and p.id = rp.pid and r.type = ? 
[2019-01-11 17:25:13.430] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: admin(String)
[2019-01-11 17:25:13.431] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:25:13.432] [INFO] com.pace2car.springbootdemo.shiro.realm.ShiroRealm 65 doGetAuthorizationInfo - 用户角色[admin]
[2019-01-11 17:25:13.432] [INFO] com.pace2car.springbootdemo.shiro.realm.ShiroRealm 67 doGetAuthorizationInfo - 用户权限[*:*]
[2019-01-11 17:25:13.433] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:25:13.433] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:25:13.433] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 313 channelWriteAndFlush - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:25:13.434] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint 129 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, epid=0x1] write() done
[2019-01-11 17:25:13.434] [DEBUG] io.lettuce.core.protocol.CommandHandler 330 write - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2019-01-11 17:25:13.434] [DEBUG] io.lettuce.core.protocol.CommandEncoder 99 encode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:25:13.435] [DEBUG] io.lettuce.core.protocol.CommandHandler 488 channelRead - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Received: 650 bytes, 1 commands in the stack
[2019-01-11 17:25:13.435] [DEBUG] io.lettuce.core.protocol.CommandHandler 533 decode - [channel=0x04102c2d, /127.0.0.1:57668 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[2019-01-11 17:25:13.435] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 93 decode - Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:25:13.435] [DEBUG] io.lettuce.core.protocol.RedisStateMachine 190 decode - Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@79c4ede3, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
[2019-01-11 17:25:13.436] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 3ms
[2019-01-11 17:26:16.469] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:26:16.470] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:26:16.471] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 2ms
[2019-01-11 17:26:35.933] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:26:35.934] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:26:35.942] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:26:35.947] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT count(0) FROM user u LEFT JOIN address a ON u.username = a.username WHERE 1 = 1 AND u.id = ? AND u.age = ? AND address = ? 
[2019-01-11 17:26:35.948] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 1(Integer), 13(Integer), 成都(String)
[2019-01-11 17:26:35.950] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:26:35.952] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:26:35.955] [DEBUG] io.lettuce.core.RedisChannelHandler 120 dispatch - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2019-01-11 17:26:35.957] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 23ms
[2019-01-11 17:27:00.677] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:27:00.686] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==>  Preparing: SELECT count(0) FROM user u LEFT JOIN address a ON u.username = a.username WHERE 1 = 1 AND u.id = ? AND u.age = ? AND address = ? 
[2019-01-11 17:27:00.687] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - ==> Parameters: 1(Integer), 16(Integer), 成都(String)
[2019-01-11 17:27:00.688] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <==      Total: 1
[2019-01-11 17:27:00.692] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 14ms
[2019-01-11 17:27:04.260] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:27:04.261] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 1ms
[2019-01-11 17:27:09.571] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 75 getComplexUser - 根据复杂条件查询用户
[2019-01-11 17:27:09.574] [INFO] com.pace2car.springbootdemo.web.controller.usercontroller.UserController 78 getComplexUser - 2ms
